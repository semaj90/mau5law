<script lang="ts">
  // Svelte 5 with runes (dry-run conversion)
  let {
    initialCount = 0
  }: {
    initialCount?: number;
  } = $props();

  let count = $state(initialCount);
  let history = $state<number[]>([]);

  // Converted reactive assignment -> $derived
  let doubled = $derived(count * 2);

  // Converted side-effect -> $effect
  $effect(() => {
    if (count > 10) {
      console.log("Count is getting high!");
    }
  });

  // Converted history update to effect
  $effect(() => {
    history = [...history.slice(-4), count];
  });

  function increment() {
    count += 1;
  }

  function reset() {
    count = initialCount;
  }
</script>

<div class="counter-container">
  <h2>Svelte 5 Counter with Runes (dry-run)</h2>
  <div class="display">
    <p>Count: {count}</p>
    <p>Doubled: {doubled}</p>
    <p>History: {history.join(', ')}</p>
  </div>
  <div class="controls">
    <button onclick={increment}>Increment</button>
    <button onclick={reset}>Reset</button>
  </div>
</div>

<style>
  /* ...existing styles... */
</style>
