{
  "name": "yorha-legal-ai-frontend",
  "version": "1.0.0",
  "description": "YoRHa-styled legal AI frontend with Gemma3 integration",
  "type": "module",
  "scripts": {
    "dev": "concurrently -n \"Redis,Vite\" -c \"red,cyan\" \"node scripts/start-redis.js\" \"vite dev --config vite.config.ts\"",
    "dev:lowmem": "cross-env NODE_OPTIONS=\"--max-old-space-size=2048\" CHOKIDAR_USEPOLLING=0 VITE_FORCE_OPTIMIZE=false VITE_DEP_PRELOAD=false vite dev --config vite.config.lowmem.ts",
    "dev:gpu": "cross-env NODE_OPTIONS=--max-old-space-size=3072 ENABLE_GPU=true RTX_3060_OPTIMIZATION=true CONTEXT7_MULTICORE=true OLLAMA_GPU_LAYERS=30 vite dev",
    "dev:gpu:quic": "cross-env NODE_OPTIONS=--max-old-space-size=3072 ENABLE_GPU=true RTX_3060_OPTIMIZATION=true CONTEXT7_MULTICORE=true OLLAMA_GPU_LAYERS=30 vite dev --port 5174 --strictPort --host 127.0.0.1",
    "dev:gpu:8g": "cross-env NODE_OPTIONS=\"--max-old-space-size=8192\" ENABLE_GPU=true RTX_3060_OPTIMIZATION=true CONTEXT7_MULTICORE=true OLLAMA_GPU_LAYERS=30 vite dev",
    "dev:8g": "cross-env NODE_OPTIONS=\"--max-old-space-size=8192\" vite dev",
    "dev:quic": "vite dev --port 5174 --strictPort --host 127.0.0.1",
    "dev:debug": "cross-env DEBUG=vite:*,kit:* vite dev --config vite.config.enhanced.js",
    "dev:debug:vite": "cross-env DEBUG=vite:* vite dev",
    "dev:debug:kit": "cross-env DEBUG=kit:* vite dev",
    "dev:debug:verbose": "cross-env DEBUG=vite:*,kit:*,sveltekit:* VITE_LOG_LEVEL=info vite dev --config vite.config.enhanced.js --logLevel info",
    "dev:debug:win": "set DEBUG=vite:*,kit:* && vite dev",
    "dev:debug:routing": "cross-env DEBUG=kit:router,kit:adapter vite dev",
  "dev:full": "node scripts/start-unified-services.js",
    "dev:coordinated": "node scripts/start-coordinated-full-stack.mjs",
    "dev:unified": "node scripts/start-unified-services.js",
    "dev:full:rtx": "npx zx scripts/rtx-enhanced-system-startup.mjs",
    "dev:full:quic": "start-full-quic.bat",
    "dev:full:quic:lowmem": "cross-env NODE_OPTIONS=\"--max-old-space-size=2048\" npm run dev:full:quic",
    "dev:full:lowmem": "cross-env NODE_OPTIONS=\"--max-old-space-size=3072\" npm run dev:full",
    "dev:full:8g": "cross-env NODE_OPTIONS=\"--max-old-space-size=8192\" npm run dev:full",
    "dev:full:concurrent": "concurrently -n \"Frontend,GPU,Health\" -c \"cyan,magenta,green\" \"npm run dev:gpu\" \"npm run gpu:monitor\" \"npm run health:watch\"",
    "dev:full:legacy": "node scripts/enhanced-system-startup.mjs",
    "dev:full:legacy:alt": "node scripts/dev-full-working.mjs",
    "dev:full:original": "node scripts/start-full-stack-37-services.mjs",
    "dev:rtx": "node scripts/rtx-enhanced-system-startup.mjs",
    "dev:full:logs": "node scripts/enhanced-system-startup.mjs && tail -f logs/vite-errors.log",
    "dev:simple": "node scripts/start-dev-simple.mjs",
    "dev:full:with-smoke": "node scripts/run-dev-with-smoke.mjs",
    "dev:frontend:with-smoke": "node scripts/run-frontend-and-smoke.mjs",
    "smoke": "tsx scripts/smoke.ts",
  "worker:ingest": "tsx src/workers/ingestion-worker.ts",
  "worker:embeddings": "tsx src/lib/workers/queue-worker.ts",
    "dev:dual": "concurrently --restart-tries 3 --restart-after 4000 -n FRONTEND,PROXY \"vite dev\" \"cd .. && node start-port-5180.cjs\"",
    "dev:proxy": "cd .. && node start-port-5180.cjs",
    "start:dual": "concurrently --restart-tries 3 --restart-after 4000 -n FRONTEND,PROXY \"vite dev\" \"cd .. && node start-port-5180.cjs\"",
    "start:env": "cd .. && node start-dual-ports-with-env.cjs",
    "dev:complete": "node scripts/start-dev-complete.mjs",
    "dev:legal-ai-full": "node scripts/start-full-legal-ai-stack.mjs",
    "services:tier1": "node scripts/start-tier1-services.mjs",
    "services:all": "npm run dev:full",
    "services:health": "curl -s http://localhost:5173/api/v1/health/cuda",
    "cuda:test": "curl -X POST http://localhost:8096/cuda/compute -H 'Content-Type: application/json' -d '{\"query\":\"test RTX processing\",\"metadata\":{\"test\":true}}'",
    "rtx:health": "curl -s http://localhost:8096/health",
    "rtx:stats": "curl -s http://localhost:8096/cuda/stats",
    "rtx:gateway": "curl -s http://localhost:8230/health",
    "rtx:upload": "curl -s http://localhost:8093/health",
    "rtx:test-all": "npm run rtx:health && npm run rtx:gateway && npm run rtx:upload",
    "gpu-wasm:test": "node scripts/test-gpu-wasm-integration.mjs",
    "gpu:monitor": "node scripts/gpu-monitor.mjs",
    "gpu:accelerated": "cross-env CUDA_VISIBLE_DEVICES=0 ENABLE_GPU=true RTX_3060_OPTIMIZATION=true npm run dev",
    "health:watch": "powershell -NoProfile -Command \"while($true) { Write-Host ('Health Check: ' + (Get-Date).ToString('HH:mm:ss')); try { $r = Invoke-RestMethod -Uri http://localhost:5181/api/health -TimeoutSec 3; Write-Host 'OK' -ForegroundColor Green } catch { Write-Host 'ERROR' -ForegroundColor Red }; Start-Sleep 10 }\"",
    "platform:start": "cd .. && .\\LEGAL.AI.bat",
    "platform:dev": "concurrently -n \"Legal-AI,Frontend-GPU,Monitor\" -c \"cyan,magenta,green\" \"cd .. && node scripts/start-legal-ai-platform.mjs\" \"npm run dev:gpu\" \"npm run gpu:monitor\"",
    "legal-ai:complete": "cd .. && npm run platform:start && npm run dev:full",
    "microservices:health": "curl -s http://localhost:8081/health && curl -s http://localhost:8093/health && curl -s http://localhost:8084/health",
    "stack:verify": "node scripts/verify-complete-stack.mjs",
    "gpu-wasm:verify": "curl -X POST http://localhost:5173/api/gpu-wasm-integration -H 'Content-Type: application/json' -d '{\"action\":\"status\"}'",
    "start": "npm run dev:full",
    "start:rtx": "npm run dev:rtx",
    "start:coordinated": "node scripts/start-coordinated-full-stack.mjs",
    "coordinator:start": "node scripts/start-coordinated-full-stack.mjs",
    "coordinator:status": "curl -s http://localhost:5173/api/v1/coordinator?action=status",
    "coordinator:health": "curl -s http://localhost:5173/api/v1/coordinator?action=health",
    "coordinator:check": "node scripts/check-coordinated-system.mjs",
    "start:complete": "npm run dev:complete",
    "remote:start": "node scripts/keyboard-remote-server.mjs",
    "remote:server": "node scripts/keyboard-remote-server.mjs 8085",
    "redis:start": "scripts\\start-redis-with-config.bat",
    "redis:stop": "redis-cli shutdown",
    "redis:health": "node scripts/test-redis-connection.js",
    "redis:test": "node scripts/test-redis-connection.js",
    "redis:info": "redis-cli info",
    "redis:monitor": "redis-cli monitor",
    "redis:config": "redis-cli config get \"*\"",
    "redis:setup": "node -e \"import('$lib/utils/redis-helper.js').then(m => m.setupRedisFromConfig())\"",
    "dev:full-legacy": "node scripts/dev-full-wrapper.mjs",
    "dev:enhanced": "cross-env VITE_CONFIG_FILE=vite.config.enhanced.js VITE_FORCE_OPTIMIZE=false npm run dev",
    "dev:ultra": "concurrently -n \"Frontend,Go-API,Redis,Ollama,Monitor\" -c \"cyan,green,red,magenta,yellow\" \"npm run dev\" \"npm run go:service\" \"npm run redis:start\" \"npm run ollama:start\" \"npm run monitor:lite\"",
    "dev:windows": "powershell -ExecutionPolicy Bypass -File scripts/start-dev-windows.ps1",
    "dev:debug:enhanced": "cross-env DEBUG=vite:*,kit:*,sveltekit:* VITE_LOG_LEVEL=info vite dev --config vite.config.enhanced.js --logLevel info",
    "logs:vite": "tail -f logs/vite-errors.log",
    "logs:system": "tail -f logs/system-startup.log",
    "logs:all": "concurrently \"tail -f logs/vite-errors.log\" \"tail -f logs/system-startup.log\"",
    "logs:maintain": "node scripts/log-maintenance.mjs",
    "health:check": "curl -s http://localhost:5173/api/vite-health | jq",
    "ready": "node scripts/is-ready.mjs",
    "ready:wait": "node scripts/is-ready.mjs --wait 120 --interval 5",
    "ci:ready": "node scripts/is-ready.mjs --wait 60 --interval 5 --json",
    "logs:maintain:loop": "node scripts/log-maintenance-loop.mjs",
    "test:ready": "node tests/is-ready.test.mjs",
    "health:all": "node scripts/health-check-all.mjs",
    "health:full": "node scripts/health-check-all.mjs",
    "services:status": "curl -s http://localhost:5173/api/vite-health && curl -s http://localhost:8084/api/health",
    "build": "vite build",
    "build:8g": "cross-env NODE_OPTIONS=\"--max-old-space-size=8192\" vite build",
    "build:prod": "npm run check:all && npm run test:quick && vite build",
    "preview": "vite preview",
    "check": "npm run check:typescript",
    "check:heavy": "cross-env NODE_OPTIONS=\"--max-old-space-size=8192\" tsc --noEmit",
    "check:svelte": "svelte-check --tsconfig ./tsconfig.json --threshold warning",
    "check:typescript": "tsc --noEmit",
    "test": "vitest run",
    "test:8g": "cross-env NODE_OPTIONS=\"--max-old-space-size=8192\" vitest run",
    "test:watch": "vitest",
    "test:ui": "vitest --ui",
    "test:coverage": "vitest run --coverage",
    "test:integration": "vitest run --config vitest.config.integration.ts",
    "test:integration:watch": "vitest --config vitest.config.integration.ts",
    "test:integration:ui": "vitest --ui --config vitest.config.integration.ts",
    "test:xstate": "vitest run src/lib/tests/integration/xstate-machine.test.ts",
    "test:routes": "vitest run src/lib/tests/integration/route-health.test.ts",
    "test:ssr": "vitest run src/lib/tests/integration/ssr-session-integrity.test.ts",
    "test:hydration": "vitest run src/lib/tests/integration/ui-hydration.test.ts",
    "test:revalidation": "vitest run src/lib/tests/integration/interval-revalidation.test.ts",
    "test:smoke": "npm run test:integration && npm run test:routes && npm run test:ssr",
    "check:auto-solve": "powershell -NoProfile -ExecutionPolicy Bypass -File scripts/check-autosolve.ps1",
    "check:direct": "echo âœ… npm run check works - debugger disabled",
    "check:full": "cross-env NODE_OPTIONS=\"\" NODE_INSPECT=\"\" tsc --noEmit --skipLibCheck --project tsconfig.frontend.json",
    "check:ultra-fast": "cross-env NODE_OPTIONS=\"\" NODE_INSPECT=\"\" tsc --noEmit --skipLibCheck --incremental -p tsconfig.check.json && echo âœ… Ultra-fast check completed",
    "fix:types": "node scripts/fix-sveltekit-types.js",
    "check:frontend": "npm run check:typescript:frontend",
    "check:frontend:full": "npm run check:typescript:frontend && npm run check:svelte:frontend",
    "check:typescript:frontend": "cross-env NODE_OPTIONS=\"\" NODE_INSPECT=\"\" tsc --noEmit --skipLibCheck --project tsconfig.check.json",
    "check:svelte:frontend": "cross-env NODE_OPTIONS=\"\" NODE_INSPECT=\"\" svelte-check --tsconfig ./tsconfig.frontend.json --threshold error --fail-on-warnings false",
    "check:svelte:exclude-melt": "node ./scripts/run-svelte-check-excluding-melt.mjs",
    "check:errors:count": "cross-env NODE_OPTIONS=\"\" NODE_INSPECT=\"\" tsc --noEmit --skipLibCheck --project tsconfig.frontend.json | grep -c \"error TS\" || echo \"0\"",
    "cleanup:tmp": "node scripts/tmp-cleaner.mjs",
    "check:all": "concurrently -n \"TS,Svelte\" -c \"blue,orange\" \"npm run check:typescript\" \"npm run check:svelte\"",
    "check:all:autosolve": "npm-run-all -s check:all auto:solve",
    "check:autosolve": "cross-env NODE_OPTIONS=\"--max-old-space-size=3072\" NODE_INSPECT=\"\" npm-run-all -s check auto:solve",
    "check:post": "npm run check && node scripts/post-check.cjs",
    "check:post:verbose": "npm run check && VERBOSE_POST_CHECK=true node scripts/post-check.cjs",
    "check:post:force": "npm run check && node scripts/post-check.cjs --force-autosolve",
    "post:check": "node scripts/post-check.cjs",
    "check:integration": "powershell -ExecutionPolicy Bypass -File install-and-check.ps1",
    "check:all:fast": "concurrently -n \"TS,Svelte\" -c \"blue,orange\" \"npm run check:ultra-fast\" \"npm run check:svelte:fast\"",
    "check:fast": "npm run check:typescript",
    "check:svelte:machine": "svelte-kit sync && svelte-check --tsconfig ./tsconfig.json --output machine",
    "check:svelte:fast": "svelte-check --tsconfig ./tsconfig.json --threshold error --fail-on-warnings false",
    "check:watch": "concurrently -n \"TS-Watch,Svelte-Watch\" \"tsc --noEmit --skipLibCheck --watch\" \"svelte-check --tsconfig ./tsconfig.json --watch\"",
    "check:errors": "node scripts/check-errors.mjs",
    "check:suggest": "node scripts/error-suggestions.mjs",
    "auto:solve": "cross-env NODE_OPTIONS=\"--max-old-space-size=3072\" NODE_INSPECT=\"\" node scripts/advanced-automation.mjs autosolve",
    "validate:svelte5": "node scripts/validate-svelte5-compliance.mjs",
    "lint": "npm run lint:check && npm run format:check",
    "lint:check": "eslint . --max-warnings 0",
    "lint:fix": "eslint . --fix",
    "format": "prettier --plugin-search-dir . --write .",
    "format:check": "prettier --plugin-search-dir . --check .",
    "test:unit": "vitest run",
    "test:e2e": "playwright test",
    "test:e2e:ui": "playwright test --ui",
    "test:e2e:headed": "playwright test --headed",
    "test:visual": "playwright test tests/visual-regression.spec.ts",
    "test:visual:update": "playwright test tests/visual-regression.spec.ts --update-snapshots",
    "test:yorha": "playwright test tests/yorha-command-center.spec.ts",
    "test:upload": "playwright test tests/file-upload-integration.spec.ts",
    "test:all": "npm run test:unit && npm run test:e2e",
    "test:quick": "vitest run --bail 1 --reporter=dot",
    "test:production": "node scripts/production-test-suite.mjs",
    "test:api": "node scripts/api-endpoint-tester.mjs",
    "test:complete": "node scripts/complete-production-validation.mjs",
    "validate:production": "npm run test:complete",
    "storybook": "storybook dev -p 6006",
    "storybook:build": "storybook build",
    "storybook:preview": "http-server storybook-static -p 6007 -o",
    "perf:regression": "vitest run src/lib/tests/splitter-regression.test.ts",
    "perf:update-baseline": "cross-env ALLOW_BASELINE_UPDATE=true node ../shared/text/update-perf-baseline.cjs",
    "test:health": "node scripts/health-check.mjs",
    "test:pg:setup": "node -r ts-node/register tests/setup-db.ts || node tests/setup-db.js",
    "gpu:deploy": "node scripts/deploy-gpu-error-system.mjs deploy",
    "gpu:test": "node scripts/test-gpu-error-system.mjs",
    "gpu:status": "node scripts/deploy-gpu-error-system.mjs status",
    "gpu:fix-errors": "node scripts/deploy-gpu-error-system.mjs deploy && npm run check",
    "gpu:orchestration:deploy": "node scripts/deploy-gpu-orchestration.mjs deploy",
    "gpu:orchestration:start": "node scripts/deploy-gpu-orchestration.mjs start",
    "gpu:orchestration:stop": "node scripts/deploy-gpu-orchestration.mjs stop",
    "gpu:orchestration:status": "node scripts/deploy-gpu-orchestration.mjs status",
    "gpu:orchestration:test": "node scripts/deploy-gpu-orchestration.mjs test",
    "status": "echo 'âœ… AI Summarization Integration Complete v8.1.2 - Production Ready'",
    "go:service": "cd .. && go run main.go",
    "go:build": "cd .. && go build -o legal-ai-service.exe main.go",
    "go:test": "cd .. && go test ./...",
    "go:health": "curl -s http://localhost:8084/api/health | jq",
    "redis:cli": "redis-cli",
    "redis:flush": "redis-cli FLUSHALL",
    "ollama:start": "ollama serve",
    "ollama:health": "curl -s http://localhost:11434/api/tags | jq",
    "ollama:pull": "ollama pull gemma3-legal:latest",
    "ollama:models": "ollama list",
    "neo4j:start": "cd .. && neo4j-community-5.21.2\\bin\\neo4j.bat start",
    "neo4j:stop": "cd .. && neo4j-community-5.21.2\\bin\\neo4j.bat stop",
    "neo4j:status": "cd .. && neo4j-community-5.21.2\\bin\\neo4j.bat status",
    "neo4j:browser": "start http://localhost:7474",
    "rabbitmq:start": "net start RabbitMQ",
    "rabbitmq:stop": "net stop RabbitMQ",
    "rabbitmq:status": "sc query RabbitMQ",
    "rabbitmq:mgmt": "start http://localhost:15672",
    "fix:ports": "node scripts/fix-port-conflicts.mjs",
    "fix:vite-errors": "npm run dev:enhanced -- --force",
    "clear:logs": "rm -rf logs/*.log && mkdir -p logs",
    "mem:print": "node -e \"console.log('Node', process.version, 'argv', process.execArgv); console.log('heapTotal(MB)=', Math.round(process.memoryUsage().heapTotal/1024/1024))\"",
    "startup:windows": "START-LEGAL-AI-SYSTEM.bat",
    "startup:coordinated": "npm run dev:full",
    "dev:clean": "npm run fix:ports && npm run dev:full",
    "db:generate": "drizzle-kit generate",
    "db:migrate": "drizzle-kit migrate",
    "db:seed": "node simple-seed.mjs",
    "db:studio": "drizzle-kit studio",
    "db:reset": "npm run db:migrate && npm run db:seed",
    "monitor": "node scripts/system-monitor.mjs",
    "monitor:lite": "node scripts/monitor-lite.mjs",
    "monitor:gpu": "nvidia-smi -l 1",
    "automation:start": "node scripts/advanced-automation.mjs start",
    "automation:health": "node scripts/advanced-automation.mjs health",
    "automation:status": "node scripts/advanced-automation.mjs status",
    "ocr:service": "node tools/ocr-service.mjs",
    "ocr:test": "node tools/ocr-test.mjs",
    "evidence:detect": "node tools/evidence-system/detect-services.mjs",
    "evidence:setup": "node tools/evidence-system/setup-smart.mjs",
    "evidence:start": "node tools/evidence-system/start-services.mjs",
    "evidence:stop": "node tools/evidence-system/stop-services.mjs",
    "evidence:db": "node tools/evidence-system/setup-database.mjs",
    "evidence:test": "node tools/evidence-system/test-system.mjs",
    "evidence:worker": "node tools/evidence-system/start-worker.mjs",
    "evidence:demo": "node tools/evidence-system/demo-one-click.mjs",
    "batch:upload": "node scripts/batch-upload-test.js",
    "rag:verify-embeddings": "node scripts/verify-embeddings-dim.mjs --sampleLimit 0",
    "rag:backfill": "node scripts/backfill-embeddings-dim.mjs --dryRun false",
    "rag:selftest": "node scripts/post-batch-selftest.mjs --threshold 0.6 --limit 5",
    "rag:summary": "node scripts/summarize-corpus-langchain.mjs --topics 12",
    "ci:rag": "npm run rag:verify-embeddings && npm run rag:selftest && node -e \"if(process.env.RAG_SUMMARY_CI==='true'){process.exit(require('child_process').spawnSync('npm',['run','rag:summary'],{stdio:'inherit'}).status||0)}\"",
    "bench:splitter": "node --experimental-specifier-resolution=node ../shared/text/benchmark-splitter.ts",
    "test:perf:splitter": "cross-env SPLITTER_MAX_MS_PER_DOC=3.5 vitest run src/lib/tests/splitter-perf.test.ts",
    "clean": "rimraf .svelte-kit dist node_modules/.vite",
    "clean:all": "npm run clean && rimraf node_modules",
    "reinstall": "npm run clean:all && npm install",
    "analyze": "npm run analyze:bundle && npm run analyze:deps",
    "analyze:bundle": "vite build --mode analyze",
    "analyze:deps": "npm list --depth=0",
    "security": "npm audit",
    "security:fix": "npm audit fix",
    "setup": "node scripts/setup-environment.mjs",
    "setup:windows": "powershell -ExecutionPolicy Bypass -File scripts/setup-windows.ps1",
    "precommit": "npm run check:all && npm run test:quick",
    "prepush": "npm run build:prod",
    "autosolve:ai-synthesis": "node scripts/autosolve-ai-synthesis.mjs",
    "autosolve:svelte5-bitsui": "node scripts/autosolve-svelte5-bitsui.mjs",
    "autosolve:eventloop:start": "node vscode-auto-solver/core/multi-core-solver.js",
    "autosolve:eventloop:cycle": "curl -s -X POST -H 'Content-Type: application/json' -d '{\"action\":\"force_cycle\"}' http://localhost:5173/api/context7-autosolve",
    "autosolve:eventloop:status": "curl -s 'http://localhost:5173/api/context7-autosolve?action=status'",
    "autosolve:eventloop:health": "curl -s 'http://localhost:5173/api/context7-autosolve?action=health'",
    "autosolve:eventloop:run-once": "npm-run-all -s autosolve:eventloop:start -p autosolve:eventloop:cycle autosolve:eventloop:status",
    "maintenance:cycle": "cross-env NODE_OPTIONS=\"--max-old-space-size=3072\" NODE_INSPECT=\"\" node scripts/autosolve-maintenance.mjs",
    "metrics:quic:poll": "node scripts/poll-quic-metrics.mjs",
    "fix:events:scan": "node ../scripts/fix-deprecated-events.mjs",
    "fix:events:write": "node ../scripts/fix-deprecated-events.mjs --write",
    "gpu:cluster:execute": "zx scripts/gpu-cluster-concurrent-executor.mjs",
    "gpu:cluster:profile": "zx scripts/gpu-cluster-concurrent-executor.mjs --profile",
    "multicore:full": "zx scripts/gpu-cluster-concurrent-executor.mjs --workers=8 --gpu-contexts=2",
    "concurrent:simd": "zx scripts/gpu-cluster-concurrent-executor.mjs --tasks=simd-parser,simd-indexer",
    "webgpu:som:cache": "zx scripts/gpu-cluster-concurrent-executor.mjs --tasks=webgpu-som --webgpu=true",
    "cluster:performance": "zx scripts/gpu-cluster-concurrent-executor.mjs --profile --report",
    "codemod:events": "node scripts/codemod-events.mjs",
    "codemod:events:revert-components": "node scripts/revert-component-onclick.mjs",
    "codemod:events:safe-cycle": "npm run codemod:events && npm run codemod:events:revert-components",
    "autosolve:iterative": "node scripts/autosolve-iterative-fixes.mjs",
    "loki:orchestra": "zx scripts/gpu-loki-orchestra.mjs",
    "loki:orchestra:full": "zx scripts/gpu-loki-orchestra.mjs --workers=16 --profile",
    "css:cleanup:quick": "zx scripts/quick-css-cleanup.mjs",
    "events:fix:simple": "zx scripts/fix-events-simple.mjs",
    "mcp:orchestra": "zx scripts/gpu-mcp-orchestra.mjs",
    "mcp:orchestra:full": "zx scripts/gpu-mcp-orchestra.mjs --workers=16 --profile",
    "mcp:gpu:integration": "zx scripts/gpu-mcp-orchestra.mjs --workers=16 --enableGPU --enableMCP",
    "metrics:collect": "node scripts/collect-error-metrics.mjs",
    "metrics:baseline": "node scripts/collect-error-metrics.mjs --baseline",
    "props:augment": "node scripts/augment-common-props.mjs",
    "test-db": "node ./scripts/test-db-connection.mjs",
    "db:introspect": "drizzle-kit introspect",
    "db:push": "drizzle-kit push",
    "db:pull": "drizzle-kit pull",
    "db:check": "drizzle-kit check",
    "db:up": "drizzle-kit up",
    "db:drop": "drizzle-kit drop",
    "db:setup": "node scripts/setup-enhanced-database.mjs",
    "db:test-connections": "node scripts/test-db-connections.mjs",
    "migrate": "node sql/run-migrations.js",
    "migrate:status": "node sql/run-migrations.js --status",
    "migrate:rollback": "node sql/run-migrations.js --rollback",
    "schema:sync": "npm run db:introspect && npm run db:generate",
    "vector:test": "node scripts/test-vector-operations-enhanced.mjs",
    "search:test": "node scripts/test-search-service.mjs",
    "qdrant:sync": "node scripts/sync-to-qdrant.mjs",
    "qdrant:health": "curl -s http://localhost:6333/collections | jq",
    "imports:resolve-all": "node -e \"import('./src/lib/services/comprehensive-missing-imports-orchestrator.js').then(m => m.comprehensiveOrchestrator.executeComprehensiveResolution(require('child_process').execSync('npm run check:ultra-fast 2>&1 || echo', {encoding: 'utf8'}), {useContext7: true, useWebFetch: true, generateFiles: true, applyBestPractices: true}).then(r => console.log('âœ… Resolution complete:', r)))\"",
    "imports:analyze": "node -e \"import('./src/lib/services/automated-barrel-store-generator.js').then(m => m.automatedBarrelGenerator.analyzeTypeScriptErrors(require('child_process').execSync('npm run check:ultra-fast 2>&1 || echo', {encoding: 'utf8'})).then(r => console.log('Analysis:', r)))\"",
    "imports:context7": "node -e \"import('./src/lib/services/context7-missing-imports-fetcher.js').then(m => console.log('Context7 fetcher available'))\"",
    "imports:webfetch": "node -e \"import('./src/lib/services/web-fetch-missing-implementations.js').then(m => console.log('Web fetch service available'))\"",
    "imports:generate": "node -e \"import('./src/lib/services/automated-barrel-store-generator.js').then(m => console.log('Barrel store generator available'))\"",
    "imports:test-comprehensive": "node test-comprehensive-system.js",
    "imports:validate": "npm run check:ultra-fast && echo 'âœ… Imports validation complete'",
    "imports:quick-fix": "npm run imports:resolve-all && npm run check:ultra-fast",
    "build-storybook": "storybook build",
    "check:editor": "node ./scripts/run-svelte-check-editor.mjs"
  },
  "devDependencies": {
    "@chromatic-com/storybook": "^4.1.1",
    "@iconify-json/lucide": "^1.2.63",
    "@iconify-json/mdi": "^1.2.3",
    "@iconify-json/tabler": "^1.2.22",
    "@storybook/addon-a11y": "^9.1.3",
    "@storybook/addon-docs": "^9.1.3",
    "@storybook/addon-essentials": "^8.6.14",
    "@storybook/addon-interactions": "^8.6.14",
    "@storybook/addon-svelte-csf": "^5.0.8",
    "@storybook/addon-vitest": "^9.1.3",
    "@storybook/sveltekit": "^9.1.3",
    "@sveltejs/adapter-auto": "^3.3.1",
    "@sveltejs/kit": "^2.35.0",
    "@sveltejs/vite-plugin-svelte": "^4.0.4",
    "@testing-library/jest-dom": "^6.8.0",
    "@testing-library/svelte": "^5.2.8",
    "@types/amqplib": "^0.10.7",
    "@types/fabric": "^5.3.0",
    "@types/lokijs": "^1.5.14",
    "@types/minio": "^7.1.0",
    "@types/node": "^24.3.0",
    "@types/pdf-parse": "^1.1.5",
    "@types/pg": "^8.15.5",
    "@types/redis": "^4.0.10",
    "@types/sharp": "^0.32.0",
    "@types/socket.io": "^3.0.1",
    "@types/tesseract.js": "^2.0.0",
    "@types/three": "^0.179.0",
    "@types/uuid": "^10.0.0",
    "@types/ws": "^8.5.0",
    "@types/xml2js": "^0.4.14",
    "@typescript-eslint/eslint-plugin": "^6.21.0",
    "@typescript-eslint/parser": "^6.21.0",
    "@unocss/preset-attributify": "^66.4.2",
    "@unocss/preset-icons": "^66.4.2",
    "@unocss/preset-uno": "^66.4.2",
    "@unocss/reset": "^66.4.2",
    "@unocss/transformer-directives": "^66.4.2",
    "@unocss/transformer-variant-group": "^66.4.2",
    "@unocss/vite": "^66.4.2",
    "@vitest/browser": "3.2.4",
    "@vitest/coverage-v8": "3.2.4",
    "@vitest/ui": "^2.1.9",
    "autoprefixer": "^10.4.21",
    "boxen": "^7.1.1",
    "chalk": "^5.5.0",
    "concurrently": "^9.2.0",
    "cross-env": "^10.0.0",
    "drizzle-kit": "^0.31.4",
    "drizzle-orm": "^0.44.5",
    "eslint": "^8.57.1",
    "eslint-config-prettier": "^9.1.0",
    "eslint-plugin-markdown": "^5.1.0",
    "eslint-plugin-storybook": "^9.1.3",
    "eslint-plugin-svelte": "^2.46.1",
    "glob": "^11.0.3",
    "inquirer": "^12.9.3",
    "jscodeshift": "^17.3.0",
    "jsdom": "^25.0.1",
    "lokijs": "^1.5.12",
    "mode-watcher": "^1.1.0",
    "mysql2": "^3.14.3",
    "nanospinner": "^1.2.2",
    "npm-run-all": "^4.1.5",
    "ora": "^8.2.0",
    "p-limit": "^5.0.0",
    "p-retry": "^6.2.0",
    "pathe": "^2.0.3",
    "playwright": "^1.55.0",
    "postcss": "^8.5.6",
    "prettier": "^3.1.1",
    "prettier-plugin-svelte": "^3.2.6",
    "rimraf": "^5.0.10",
    "storybook": "^9.1.3",
    "svelte": "^5.0.0",
    "svelte-check": "^4.3.1",
    "tailwindcss": "^3.4.17",
    "tslib": "^2.6.2",
    "tsx": "^4.20.5",
    "typescript": "^5.9.2",
    "unocss": "^66.4.2",
    "vite": "^5.4.19",
    "vite-plugin-node-polyfills": "^0.24.0",
    "vitest": "^3.2.4",
    "ws": "^8.18.3"
  },
  "dependencies": {
    "@ai-sdk/openai": "^1.3.23",
    "@ark/schema": "^0.46.0",
    "@ark/util": "^0.46.0",
    "@iconify-json/heroicons": "^1.2.2",
    "@langchain/community": "^0.3.50",
    "@langchain/core": "^0.3.72",
    "@langchain/ollama": "^0.2.3",
    "@langchain/openai": "^0.6.3",
    "@langchain/textsplitters": "^0.1.0",
    "@lucia-auth/adapter-drizzle": "^1.1.0",
    "@modelcontextprotocol/sdk": "^1.17.0",
    "@msgpack/msgpack": "^3.1.2",
    "@node-rs/argon2": "^2.0.2",
    "@paralleldrive/cuid2": "^2.2.2",
    "@playwright/test": "^1.54.2",
    "@qdrant/js-client-rest": "^1.15.1",
    "@tailwindcss/typography": "^0.5.10",
    "@tauri-apps/api": "^2.7.0",
    "@tensorflow-models/toxicity": "^1.2.2",
    "@tensorflow-models/universal-sentence-encoder": "^1.3.3",
    "@tensorflow/tfjs": "^4.22.0",
    "@tensorflow/tfjs-converter": "^4.22.0",
    "@tensorflow/tfjs-core": "^4.22.0",
    "@tensorflow/tfjs-node": "^4.22.0",
    "@tiptap/core": "^3.0.7",
    "@tiptap/extension-collaboration": "^3.0.7",
    "@tiptap/extension-focus": "^3.0.7",
    "@tiptap/extension-image": "^3.0.7",
    "@tiptap/extension-link": "^3.0.7",
    "@tiptap/extension-placeholder": "^3.0.7",
    "@tiptap/extension-text-align": "^3.0.7",
    "@tiptap/starter-kit": "^3.0.7",
    "@types/bcryptjs": "^2.4.6",
    "@types/jsonwebtoken": "^9.0.10",
    "@types/lodash-es": "^4.17.12",
    "@types/pdfkit": "^0.17.2",
    "@types/socket.io": "^3.0.1",
    "@unocss/extractor-svelte": "^66.4.2",
    "@unocss/postcss": "^66.4.2",
    "@webgpu/types": "^0.1.64",
    "@xenova/transformers": "^2.17.2",
    "@xstate/svelte": "^5.0.0",
    "amqplib": "^0.10.8",
    "arktype": "^2.1.20",
    "axios": "^1.11.0",
    "bcrypt": "^6.0.0",
    "bcryptjs": "^3.0.2",
    "bits-ui": "^2.9.4",
    "bull": "^4.16.5",
    "bullmq": "^5.56.9",
    "busboy": "^1.6.0",
    "camelcase": "^8.0.0",
    "cbor": "^10.0.11",
    "class-variance-authority": "^0.7.1",
    "clsx": "^2.1.1",
    "cssnano": "^7.1.0",
    "date-fns": "^4.1.0",
    "dexie": "^4.2.0",
    "dotenv": "^16.4.5",
    "express": "^5.1.0",
    "fabric": "^5.3.0",
    "fuse.js": "^7.1.0",
    "gl-matrix": "^3.4.3",
    "happy-dom": "^18.0.1",
    "idb-keyval": "^6.2.2",
    "ioredis": "^5.7.0",
    "jsonwebtoken": "^9.0.2",
    "langchain": "^0.3.31",
    "langextract": "^1.2.0",
    "lfu-cache": "^0.1.0",
    "lodash-es": "^4.17.21",
    "lucia": "^3.2.2",
    "lucide-svelte": "^0.474.0",
    "marked": "^16.1.1",
    "minio": "^8.0.5",
    "multer": "^2.0.2",
    "neo4j-driver": "^5.28.1",
    "nes.css": "^2.2.1",
    "node-fetch": "^3.3.2",
    "oslo": "^1.2.1",
    "pdf-parse": "^1.1.1",
    "pdf2pic": "^3.2.0",
    "pdfjs-dist": "^5.4.54",
    "pdfkit": "^0.17.1",
    "pg": "^8.16.3",
    "pgvector": "^0.1.8",
    "pm2": "^6.0.8",
    "postcss-preset-env": "^10.2.4",
    "postgres": "^3.4.7",
    "qdrant-client": "^0.0.1",
    "redis": "^5.7.0",
    "rxdb": "^16.16.0",
    "rxjs": "^7.8.2",
    "shadcn-svelte": "^1.0.7",
    "sharp": "^0.34.3",
    "socket.io": "^4.8.1",
    "socket.io-client": "^4.8.1",
    "svelte-dnd-action": "^0.9.64",
    "sveltekit-superforms": "^2.27.1",
    "tailwind-merge": "^2.5.2",
    "tailwind-variants": "^0.2.1",
    "tesseract.js": "^6.0.1",
    "three": "^0.169.0",
    "validator": "^13.15.15",
    "xml2js": "^0.6.2",
    "xss": "^1.0.15",
    "xstate": "^5.20.1",
    "zod": "^3.23.8",
    "zx": "^8.8.1"
  }
}
