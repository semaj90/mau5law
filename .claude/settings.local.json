{
  "permissions": {
    "allow": [
      "Bash(export PGPASSWORD=123456)",
      "Bash(DATABASE_URL=\"postgresql://postgres:123456@localhost:5432/legal_ai_db\" NODE_ENV=\"development\" npm run dev)",
      "Bash(npx tsx:*)",
      "Bash(DATABASE_URL=\"postgresql://postgres:123456@localhost:5432/legal_ai_db\" npm run db:push)",
      "Bash(PGPASSWORD=123456 psql -h localhost -p 5432 -U postgres -d legal_ai_db -c \"GRANT USAGE ON SCHEMA public TO legal_admin; GRANT ALL PRIVILEGES ON ALL TABLES IN SCHEMA public TO legal_admin; GRANT ALL PRIVILEGES ON ALL SEQUENCES IN SCHEMA public TO legal_admin; GRANT ALL PRIVILEGES ON ALL FUNCTIONS IN SCHEMA public TO legal_admin;\")",
      "Bash(PGPASSWORD=123456 psql -h localhost -p 5432 -U legal_admin -d legal_ai_db -c \"SELECT id, email, name FROM users LIMIT 5;\")",
      "Bash(PGPASSWORD=123456 psql -h localhost -p 5432 -U legal_admin -d legal_ai_db -c \"SELECT email, password_hash IS NOT NULL as has_password FROM users WHERE email = ''test@example.com'';\")",
      "Bash(PGPASSWORD=123456 psql -h localhost -p 5432 -U legal_admin -d legal_ai_db -c \"\\d users\")",
      "Bash(sed:*)",
      "Bash(git add:*)",
      "Bash(redis-server:*)",
      "Bash(choco install:*)",
      "Bash(rabbitmq-server:*)",
      "Bash(npm run dev:full:*)",
      "Bash(npm uninstall:*)",
      "Bash(npm install:*)",
      "Bash(redis-cli:*)",
      "Bash(node:*)",
      "Read(//c/Users/james/Videos/**)",
      "Bash(npm run dev:unified:*)",
      "Bash(git push:*)",
      "Bash(sc query:*)",
      "Bash(curl:*)",
      "Bash(npm run check:*)",
      "Bash(npx tsc:*)",
      "Bash(npx svelte-check:*)",
      "Bash(sc stop:*)",
      "Bash(npm run dev:*)",
      "Bash(test:*)",
      "Bash(find:*)",
      "Bash(tasklist:*)",
      "Bash(taskkill:*)",
      "Bash(npx svelte-kit sync)",
      "Bash(wmic process where:*)",
      "Bash(cat:*)",
      "Bash(npm run build:*)",
      "Bash(NODE_OPTIONS=\"--max-old-space-size=1024\" npx tsc --noEmit --project ./.svelte-kit/tsconfig.json src/routes/api/v1/crud/+server.ts --skipLibCheck)",
      "Bash(npm search:*)",
      "Bash(timeout 30 npm run build)",
      "Bash(timeout 15 npm run build)",
      "Bash(timeout 20 npm run build)"
    ],
    "deny": [],
    "ask": []
  }
}