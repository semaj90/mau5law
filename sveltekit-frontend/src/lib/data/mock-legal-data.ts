// Mock legal data for testing API endpoints with PostgreSQL, pgvector, and Drizzle ORM
// Compatible with the comprehensive schema structure

export const mockUsers = [
  {
    id: 'c7b5e5f0-3c4a-4b1a-8e9f-1a2b3c4d5e6f',
    email: 'attorney1@example.com',
    username: 'attorney1',
    firstName: 'Sarah',
    lastName: 'Mitchell',
    role: 'attorney',
    department: 'Criminal Defense',
    jurisdiction: 'New York State',
    permissions: ['case_create', 'case_edit', 'evidence_view'],
    isActive: true,
    emailVerified: true,
    practiceAreas: ['criminal_defense', 'civil_litigation'],
    barNumber: 'NY123456',
    firmName: 'Mitchell & Associates',
    profileEmbedding: null, // Will be generated by pgvector
    metadata: {
      specializations: ['white_collar_crime', 'appeals'],
      years_experience: 12
    }
  },
  {
    id: 'd8c6f6g1-4d5b-5c2b-9f0g-2b3c4d5e6f7g',
    email: 'paralegal1@example.com',
    username: 'paralegal1',
    firstName: 'David',
    lastName: 'Chen',
    role: 'paralegal',
    department: 'Legal Support',
    jurisdiction: 'New York State',
    permissions: ['case_view', 'evidence_create', 'document_review'],
    isActive: true,
    emailVerified: true,
    practiceAreas: ['criminal_defense'],
    barNumber: null,
    firmName: 'Mitchell & Associates',
    profileEmbedding: null,
    metadata: {
      clearance_level: 'confidential',
      years_experience: 5
    }
  }
];

export const mockCases = [
  {
    id: 'e9d7g7h2-5e6c-6d3c-a1h0-3c4d5e6f7g8h',
    caseNumber: 'CR-2024-001',
    title: 'People v. Johnson - Embezzlement Investigation',
    description: 'Investigation into alleged embezzlement of corporate funds totaling $2.3M from Acme Technologies Inc.',
    priority: 'high',
    status: 'investigating',
    practiceArea: 'white_collar_crime',
    jurisdiction: 'New York County',
    court: 'Supreme Court of New York County',
    clientName: 'State of New York',
    opposingParty: 'Michael Johnson',
    assignedAttorney: 'c7b5e5f0-3c4a-4b1a-8e9f-1a2b3c4d5e6f',
    filingDate: new Date('2024-03-15T09:00:00Z'),
    dueDate: new Date('2024-12-15T17:00:00Z'),
    caseEmbedding: null, // Will be generated by pgvector
    qdrantId: null,
    qdrantCollection: 'cases',
    metadata: {
      estimated_damages: 2300000,
      case_type: 'felony',
      complexity_score: 8.5,
      investigation_priority: 'high'
    }
  },
  {
    id: 'f0e8h8i3-6f7d-7e4d-b2i1-4d5e6f7g8h9i',
    caseNumber: 'CV-2024-002',
    title: 'Smith v. ABC Corp - Personal Injury',
    description: 'Slip and fall accident at ABC Corp premises resulting in severe back injury. Client seeking compensation for medical expenses and lost wages.',
    priority: 'medium',
    status: 'open',
    practiceArea: 'personal_injury',
    jurisdiction: 'New York County',
    court: 'Civil Court of New York County',
    clientName: 'Jennifer Smith',
    opposingParty: 'ABC Corporation',
    assignedAttorney: 'c7b5e5f0-3c4a-4b1a-8e9f-1a2b3c4d5e6f',
    filingDate: new Date('2024-04-02T10:30:00Z'),
    dueDate: new Date('2025-01-02T17:00:00Z'),
    caseEmbedding: null,
    qdrantId: null,
    qdrantCollection: 'cases',
    metadata: {
      estimated_damages: 150000,
      case_type: 'civil',
      complexity_score: 5.2,
      injury_severity: 'moderate'
    }
  }
];

export const mockEvidence = [
  {
    id: 'g1f9i9j4-7g8e-8f5e-c3j2-5e6f7g8h9i0j',
    caseId: 'e9d7g7h2-5e6c-6d3c-a1h0-3c4d5e6f7g8h',
    title: 'Financial Records - Acme Technologies Bank Statements',
    description: 'Bank statements from Chase Manhattan showing suspicious large transfers over 18-month period',
    evidenceType: 'financial_document',
    subType: 'bank_statement',
    fileName: 'acme_chase_statements_2023_2024.pdf',
    fileSize: 2547832,
    mimeType: 'application/pdf',
    hash: 'sha256:a1b2c3d4e5f6g7h8i9j0k1l2m3n4o5p6q7r8s9t0u1v2w3x4y5z6',
    collectedBy: 'David Chen',
    location: 'Acme Technologies CFO Office',
    chainOfCustody: [
      {
        timestamp: '2024-03-20T14:30:00Z',
        officer: 'David Chen',
        action: 'evidence_collected',
        location: 'Acme Technologies CFO Office'
      },
      {
        timestamp: '2024-03-20T15:45:00Z',
        officer: 'Sarah Mitchell',
        action: 'evidence_logged',
        location: 'Evidence Room A'
      }
    ],
    tags: ['financial', 'bank_statements', 'suspicious_transfers'],
    isAdmissible: true,
    confidentialityLevel: 'confidential',
    aiAnalysis: {
      confidence: 0.89,
      entities: ['Acme Technologies', 'Chase Manhattan Bank', 'Michael Johnson'],
      keywords: ['wire_transfer', 'account_balance', 'transaction_history'],
      summary: 'Bank statements reveal 23 large wire transfers totaling $2.3M to offshore accounts between Jan 2023 and June 2024'
    },
    aiTags: ['financial_fraud', 'wire_transfers', 'offshore_accounts'],
    aiSummary: 'Critical financial evidence showing systematic embezzlement pattern',
    titleEmbedding: null, // Will be generated by pgvector
    contentEmbedding: null,
    embedding: null,
    contentText: 'Financial records showing systematic wire transfers from Acme Technologies operating account to various offshore entities. Pattern suggests coordinated embezzlement scheme.',
    metadata: {
      total_suspicious_amount: 2300000,
      transaction_count: 23,
      date_range: '2023-01-15 to 2024-06-30',
      evidence_quality: 'high'
    }
  },
  {
    id: 'h2g0j0k5-8h9f-9g6f-d4k3-6f7g8h9i0j1k',
    caseId: 'f0e8h8i3-6f7d-7e4d-b2i1-4d5e6f7g8h9i',
    title: 'Security Camera Footage - Slip and Fall Incident',
    description: 'CCTV footage from ABC Corp main entrance showing the moment of the slip and fall accident',
    evidenceType: 'video',
    subType: 'security_footage',
    fileName: 'abc_corp_entrance_20240402_1025.mp4',
    fileSize: 15467892,
    mimeType: 'video/mp4',
    hash: 'sha256:b2c3d4e5f6g7h8i9j0k1l2m3n4o5p6q7r8s9t0u1v2w3x4y5z6a1',
    collectedBy: 'Sarah Mitchell',
    location: 'ABC Corp Main Entrance',
    chainOfCustody: [
      {
        timestamp: '2024-04-05T11:00:00Z',
        officer: 'Sarah Mitchell',
        action: 'evidence_requested',
        location: 'ABC Corp Security Office'
      },
      {
        timestamp: '2024-04-05T11:30:00Z',
        officer: 'ABC Corp Security',
        action: 'footage_provided',
        location: 'ABC Corp Security Office'
      }
    ],
    tags: ['video_evidence', 'slip_fall', 'premises_liability'],
    isAdmissible: true,
    confidentialityLevel: 'internal',
    aiAnalysis: {
      confidence: 0.95,
      entities: ['Jennifer Smith', 'ABC Corp', 'wet_floor'],
      keywords: ['slip', 'fall', 'wet_surface', 'no_warning_sign'],
      summary: 'Clear footage shows plaintiff slipping on wet surface with no visible warning signs posted'
    },
    aiTags: ['premises_liability', 'negligence', 'clear_evidence'],
    aiSummary: 'Compelling video evidence supporting negligence claim',
    titleEmbedding: null,
    contentEmbedding: null,
    embedding: null,
    contentText: 'Security camera footage clearly showing slip and fall incident on wet floor with no warning signs present. Timestamp matches incident report.',
    metadata: {
      video_duration: 45,
      camera_angle: 'overhead',
      lighting_quality: 'good',
      evidence_quality: 'excellent'
    }
  }
];

export const mockLegalDocuments = [
  {
    id: 1,
    filename: 'motion_to_suppress_evidence.pdf',
    originalPath: '/uploads/2024/03/motion_to_suppress_evidence.pdf',
    s3Bucket: 'legal-documents',
    s3Key: '2024/03/20/motion_to_suppress_evidence.pdf',
    fileSize: 456789,
    mimeType: 'application/pdf',
    documentType: 'motion',
    title: 'Motion to Suppress Evidence - People v. Johnson',
    contentPreview: 'MOTION TO SUPPRESS EVIDENCE - The defense respectfully moves this court to suppress all evidence obtained during the search of defendant\'s office...',
    fullText: 'MOTION TO SUPPRESS EVIDENCE\n\nTO THE HONORABLE COURT:\n\nThe defense respectfully moves this court to suppress all evidence obtained during the search of defendant\'s office on March 15, 2024, on the grounds that said search violated the defendant\'s Fourth Amendment rights...',
    metadata: {
      court: 'Supreme Court of New York County',
      case_number: 'CR-2024-001',
      filing_date: '2024-03-25',
      document_category: 'pre_trial_motion'
    },
    processingStatus: 'processed',
    createdBy: 'c7b5e5f0-3c4a-4b1a-8e9f-1a2b3c4d5e6f',
    evidenceId: 'g1f9i9j4-7g8e-8f5e-c3j2-5e6f7g8h9i0j',
    embedding: null // Will be generated by pgvector
  }
];

export const mockChatSessions = [
  {
    id: 'i3h1k1l6-9i0g-0h7g-e5l4-7g8h9i0j1k2l',
    userId: 'c7b5e5f0-3c4a-4b1a-8e9f-1a2b3c4d5e6f',
    title: 'Case Analysis: People v. Johnson Evidence Review',
    metadata: {
      case_id: 'e9d7g7h2-5e6c-6d3c-a1h0-3c4d5e6f7g8h',
      analysis_type: 'evidence_review',
      ai_model: 'gemma3-legal'
    }
  }
];

export const mockChatMessages = [
  {
    id: 'j4i2l2m7-0j1h-1i8h-f6m5-8h9i0j1k2l3m',
    sessionId: 'i3h1k1l6-9i0g-0h7g-e5l4-7g8h9i0j1k2l',
    userId: 'c7b5e5f0-3c4a-4b1a-8e9f-1a2b3c4d5e6f',
    role: 'user',
    content: 'Can you analyze the financial evidence in the Johnson embezzlement case and identify key patterns?',
    clientMessageId: 'msg_001',
    contentEmbedding: null,
    metadata: {
      case_reference: 'CR-2024-001',
      evidence_referenced: ['financial_records']
    }
  },
  {
    id: 'k5j3m3n8-1k2i-2j9i-g7n6-9i0j1k2l3m4n',
    sessionId: 'i3h1k1l6-9i0g-0h7g-e5l4-7g8h9i0j1k2l',
    userId: 'c7b5e5f0-3c4a-4b1a-8e9f-1a2b3c4d5e6f',
    role: 'assistant',
    content: 'Based on my analysis of the financial records, I\'ve identified several key patterns: 1) 23 wire transfers totaling $2.3M over 18 months, 2) All transfers occurred on Fridays after business hours, 3) Receiving accounts are linked to offshore entities in tax havens. This pattern strongly suggests systematic embezzlement.',
    clientMessageId: 'msg_002',
    contentEmbedding: null,
    metadata: {
      ai_confidence: 0.92,
      analysis_type: 'financial_pattern_recognition',
      evidence_analyzed: ['bank_statements', 'wire_transfers']
    }
  }
];

// Mock API responses for testing
export const mockApiResponses = {
  cases: {
    list: {
      success: true,
      cases: mockCases,
      pagination: {
        page: 1,
        limit: 50,
        total: 2,
        totalPages: 1,
        hasMore: false
      },
      search: null
    },
    create: {
      success: true,
      case: mockCases[0],
      message: 'Case CR-2024-001 created successfully',
      metadata: {
        workerTriggered: true,
        timestamp: new Date().toISOString()
      }
    }
  },
  evidence: {
    list: {
      success: true,
      evidence: mockEvidence,
      pagination: {
        limit: 50,
        offset: 0,
        total: 2,
        hasMore: false
      },
      filters: {
        caseId: 'e9d7g7h2-5e6c-6d3c-a1h0-3c4d5e6f7g8h'
      }
    },
    create: {
      success: true,
      evidence: mockEvidence[0],
      analysis: {
        analysisTriggered: true,
        detectiveMode: true,
        embeddingJobId: 'job_1234567890',
        aiAnalysis: {
          confidence: 0.89,
          entities: ['Acme Technologies', 'Chase Manhattan Bank'],
          summary: 'Critical financial evidence showing systematic embezzlement pattern'
        }
      }
    }
  },
  search: {
    vectorSearch: {
      success: true,
      query: 'financial fraud evidence',
      results: [
        {
          id: 'g1f9i9j4-7g8e-8f5e-c3j2-5e6f7g8h9i0j',
          title: 'Financial Records - Acme Technologies Bank Statements',
          type: 'evidence',
          similarity: 0.923,
          metadata: {
            case_id: 'e9d7g7h2-5e6c-6d3c-a1h0-3c4d5e6f7g8h',
            evidence_type: 'financial_document',
            confidence: 0.89
          }
        }
      ],
      metadata: {
        count: 1,
        processingTime: 156,
        embeddingDimensions: 384,
        threshold: 0.6,
        searchTypes: ['evidence'],
        timestamp: new Date().toISOString()
      }
    }
  }
};

// Helper function to generate embeddings (mock implementation)
export function generateMockEmbedding(dimensions: number = 384): number[] {
  return Array.from({ length: dimensions }, () => Math.random() * 2 - 1);
}

// Initialize mock data with embeddings
export function initializeMockDataWithEmbeddings() {
  return {
    users: mockUsers.map(user => ({
      ...user,
      profileEmbedding: user.profileEmbedding || generateMockEmbedding(384)
    })),
    cases: mockCases.map(case_ => ({
      ...case_,
      caseEmbedding: case_.caseEmbedding || generateMockEmbedding(384)
    })),
    evidence: mockEvidence.map(evidence => ({
      ...evidence,
      embedding: evidence.embedding || generateMockEmbedding(384),
      titleEmbedding: evidence.titleEmbedding || generateMockEmbedding(384),
      contentEmbedding: evidence.contentEmbedding || generateMockEmbedding(384)
    })),
    legalDocuments: mockLegalDocuments.map(doc => ({
      ...doc,
      embedding: doc.embedding || generateMockEmbedding(384)
    })),
    chatMessages: mockChatMessages.map(msg => ({
      ...msg,
      contentEmbedding: msg.contentEmbedding || generateMockEmbedding(384)
    }))
  };
}